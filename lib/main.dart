import 'package:flutter/material.dart';
import 'package:firebase_core/firebase_core.dart';
import 'firebase_options.dart'; // Ensure this file exists and is correctly generated
// Import your page files - adjust paths if your structure is different
import 'package:cashflow_app/pages/login_or_register_page.dart';
import 'package:cashflow_app/pages/dashboard_page.dart';
import 'package:cashflow_app/pages/profile_page.dart';
import 'package:cashflow_app/pages/ai_analysis.dart';
import 'package:cashflow_app/pages/results_page.dart';
import 'package:cashflow_app/pages/past_analyses_page.dart';


void main() async {
  // Ensure Flutter binding is initialized before using Firebase
  WidgetsFlutterBinding.ensureInitialized();

  // Initialize Firebase with the options generated by FlutterFire CLI
  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  // Run the main application widget
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({Key? key}) : super(key: key);

  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Cashflow App', // Your app's title
      debugShowCheckedModeBanner: false, // Remove debug banner
      theme: ThemeData(
        primarySwatch: Colors.blue, // Primary color
        // Define the default brightness and colors.
        brightness: Brightness.dark, // Use dark theme as per your existing code colors
        scaffoldBackgroundColor: const Color(0xFF1C1C28), // Set default background
        appBarTheme: const AppBarTheme(
          backgroundColor: Color(0xFF1C1C28),
          foregroundColor: Colors.white, // Set default app bar text/icon color
        ),
        drawerTheme: const DrawerThemeData(
           backgroundColor: Color(0xFF1C1C28), // Set default drawer background
        ),
        // You might want to define text themes, button themes, etc. for consistency
        textTheme: const TextTheme(
           bodyMedium: TextStyle(color: Colors.white), // Default text color
           bodySmall: TextStyle(color: Colors.grey), // Default text color for smaller text
           titleMedium: TextStyle(color: Colors.white), // Default text color for titles
           titleLarge: TextStyle(color: Colors.white), // Default text color for large titles
        ),
        elevatedButtonTheme: ElevatedButtonThemeData(
           style: ElevatedButton.styleFrom(
              foregroundColor: Colors.white, // Default button text color
           )
        ),
        inputDecorationTheme: const InputDecorationTheme(
           labelStyle: TextStyle(color: Colors.grey),
           hintStyle: TextStyle(color: Colors.grey),
           enabledBorder: OutlineInputBorder(
             borderSide: BorderSide(color: Colors.grey),
           ),
           focusedBorder: OutlineInputBorder(
             borderSide: BorderSide(color: Colors.blueAccent),
           ),
           errorBorder: OutlineInputBorder(
             borderSide: BorderSide(color: Colors.redAccent),
           ),
           focusedErrorBorder: OutlineInputBorder(
             borderSide: BorderSide(color: Colors.red),
           ),
        )
      ),
      // Define routes for easier navigation (optional but good practice)
      routes: {
         '/login_register': (context) => const LoginOrRegisterPage(),
         '/dashboard': (context) => const DashboardPage(),
         '/profile': (context) => const ProfilePage(),
         '/ai_analysis': (context) => const AiAnalysisPage(),
         '/results': (context) => const ResultsPage(),
         '/past_analyses': (context) => const PastAnalysesPage(),
      },
      // The initial route the app starts on
      home: const LoginOrRegisterPage(), // Start with LoginOrRegisterPage
    );
  }
}
